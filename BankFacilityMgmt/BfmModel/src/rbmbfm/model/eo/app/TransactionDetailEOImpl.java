package rbmbfm.model.eo.app;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;

import rbmbfm.model.common.TransactionType;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 29 20:55:43 PDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransactionDetailEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TransactionDtlId,
        TransactionId,
        TransactionVersion,
        TransactionDate,
        BusinessEntityId,
        IssuingBankId,
        BeneficiaryBankId,
        FacilityTrackerId,
        ApprovalStatus,
        SourceType,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        Version,
        FacilityStructureId,
        TransactionBaseEO,
        TransactionDocumentRefEO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TRANSACTIONDTLID = AttributesEnum.TransactionDtlId.index();
    public static final int TRANSACTIONID = AttributesEnum.TransactionId.index();
    public static final int TRANSACTIONVERSION = AttributesEnum.TransactionVersion.index();
    public static final int TRANSACTIONDATE = AttributesEnum.TransactionDate.index();
    public static final int BUSINESSENTITYID = AttributesEnum.BusinessEntityId.index();
    public static final int ISSUINGBANKID = AttributesEnum.IssuingBankId.index();
    public static final int BENEFICIARYBANKID = AttributesEnum.BeneficiaryBankId.index();
    public static final int FACILITYTRACKERID = AttributesEnum.FacilityTrackerId.index();
    public static final int APPROVALSTATUS = AttributesEnum.ApprovalStatus.index();
    public static final int SOURCETYPE = AttributesEnum.SourceType.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int FACILITYSTRUCTUREID = AttributesEnum.FacilityStructureId.index();
    public static final int TRANSACTIONBASEEO = AttributesEnum.TransactionBaseEO.index();
    public static final int TRANSACTIONDOCUMENTREFEO = AttributesEnum.TransactionDocumentRefEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TransactionDetailEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("rbmbfm.model.eo.app.TransactionDetailEO");
    }


    /**
     * Gets the attribute value for TransactionDtlId, using the alias name TransactionDtlId.
     * @return the value of TransactionDtlId
     */
    public BigDecimal getTransactionDtlId() {
        return (BigDecimal) getAttributeInternal(TRANSACTIONDTLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransactionDtlId.
     * @param value value to set the TransactionDtlId
     */
    public void setTransactionDtlId(BigDecimal value) {
        setAttributeInternal(TRANSACTIONDTLID, value);
    }

    /**
     * Gets the attribute value for TransactionId, using the alias name TransactionId.
     * @return the value of TransactionId
     */
    public BigDecimal getTransactionId() {
        return (BigDecimal) getAttributeInternal(TRANSACTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransactionId.
     * @param value value to set the TransactionId
     */
    public void setTransactionId(BigDecimal value) {
        setAttributeInternal(TRANSACTIONID, value);
    }

    /**
     * Gets the attribute value for TransactionVersion, using the alias name TransactionVersion.
     * @return the value of TransactionVersion
     */
    public BigDecimal getTransactionVersion() {
        return (BigDecimal) getAttributeInternal(TRANSACTIONVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransactionVersion.
     * @param value value to set the TransactionVersion
     */
    public void setTransactionVersion(BigDecimal value) {
        setAttributeInternal(TRANSACTIONVERSION, value);
    }

    /**
     * Gets the attribute value for TransactionDate, using the alias name TransactionDate.
     * @return the value of TransactionDate
     */
    public Timestamp getTransactionDate() {
        return (Timestamp) getAttributeInternal(TRANSACTIONDATE);
    }

    /**
     * Gets the attribute value for BusinessEntityId, using the alias name BusinessEntityId.
     * @return the value of BusinessEntityId
     */
    public BigDecimal getBusinessEntityId() {
        return (BigDecimal) getAttributeInternal(BUSINESSENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BusinessEntityId.
     * @param value value to set the BusinessEntityId
     */
    public void setBusinessEntityId(BigDecimal value) {
        setAttributeInternal(BUSINESSENTITYID, value);
    }

    /**
     * Gets the attribute value for IssuingBankId, using the alias name IssuingBankId.
     * @return the value of IssuingBankId
     */
    public BigDecimal getIssuingBankId() {
        return (BigDecimal) getAttributeInternal(ISSUINGBANKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssuingBankId.
     * @param value value to set the IssuingBankId
     */
    public void setIssuingBankId(BigDecimal value) {
        setAttributeInternal(ISSUINGBANKID, value);
    }

    /**
     * Gets the attribute value for BeneficiaryBankId, using the alias name BeneficiaryBankId.
     * @return the value of BeneficiaryBankId
     */
    public BigDecimal getBeneficiaryBankId() {
        return (BigDecimal) getAttributeInternal(BENEFICIARYBANKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BeneficiaryBankId.
     * @param value value to set the BeneficiaryBankId
     */
    public void setBeneficiaryBankId(BigDecimal value) {
        setAttributeInternal(BENEFICIARYBANKID, value);
    }

    /**
     * Gets the attribute value for FacilityTrackerId, using the alias name FacilityTrackerId.
     * @return the value of FacilityTrackerId
     */
    public BigDecimal getFacilityTrackerId() {
        return (BigDecimal) getAttributeInternal(FACILITYTRACKERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FacilityTrackerId.
     * @param value value to set the FacilityTrackerId
     */
    public void setFacilityTrackerId(BigDecimal value) {
        setAttributeInternal(FACILITYTRACKERID, value);
    }

    /**
     * Gets the attribute value for ApprovalStatus, using the alias name ApprovalStatus.
     * @return the value of ApprovalStatus
     */
    public String getApprovalStatus() {
        return (String) getAttributeInternal(APPROVALSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApprovalStatus.
     * @param value value to set the ApprovalStatus
     */
    public void setApprovalStatus(String value) {
        setAttributeInternal(APPROVALSTATUS, value);
    }

    /**
     * Gets the attribute value for SourceType, using the alias name SourceType.
     * @return the value of SourceType
     */
    public String getSourceType() {
        return (String) getAttributeInternal(SOURCETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SourceType.
     * @param value value to set the SourceType
     */
    public void setSourceType(String value) {
        setAttributeInternal(SOURCETYPE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Gets the attribute value for Version, using the alias name Version.
     * @return the value of Version
     */
    public BigDecimal getVersion() {
        return (BigDecimal) getAttributeInternal(VERSION);
    }

    /**
     * Gets the attribute value for FacilityStructureId, using the alias name FacilityStructureId.
     * @return the value of FacilityStructureId
     */
    public BigDecimal getFacilityStructureId() {
        return (BigDecimal) getAttributeInternal(FACILITYSTRUCTUREID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FacilityStructureId.
     * @param value value to set the FacilityStructureId
     */
    public void setFacilityStructureId(BigDecimal value) {
        setAttributeInternal(FACILITYSTRUCTUREID, value);
    }

    /**
     * @return the associated entity TransactionBaseEOImpl.
     */
    public TransactionBaseEOImpl getTransactionBaseEO() {
        return (TransactionBaseEOImpl) getAttributeInternal(TRANSACTIONBASEEO);
    }

    /**
     * Sets <code>value</code> as the associated entity TransactionBaseEOImpl.
     */
    public void setTransactionBaseEO(TransactionBaseEOImpl value) {
        setAttributeInternal(TRANSACTIONBASEEO, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTransactionDocumentRefEO() {
        return (RowIterator) getAttributeInternal(TRANSACTIONDOCUMENTREFEO);
    }


    /**
     * @param transactionDtlId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal transactionDtlId) {
        return new Key(new Object[] { transactionDtlId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        setApprovalStatus(TransactionType.DRAFT.toString());
    }    
}