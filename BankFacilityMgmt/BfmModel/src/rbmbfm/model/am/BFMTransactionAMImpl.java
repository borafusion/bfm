package rbmbfm.model.am;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.VariableValueManager;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaManager;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;


import oracle.jbo.server.ViewObjectImpl;

import oracle.sql.DATE;
import oracle.sql.NUMBER;

import rbmbfm.model.am.common.BFMTransactionAM;
import rbmbfm.model.common.TransactionType;
import rbmbfm.model.vo.app.TransactionBaseVORowImpl;
import rbmbfm.model.vo.app.TransactionDetailVORowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Sep 27 19:30:53 PDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BFMTransactionAMImpl extends ApplicationModuleImpl implements BFMTransactionAM {
    /**
     * This is the default constructor (do not remove).
     */
    public BFMTransactionAMImpl() {
    }

    /**
     * Container's getter for InwardLCTransactionDetailVO1.
     * @return InwardLCTransactionDetailVO1
     */
    public ViewObjectImpl getInwardLCTransactionDetailVO1() {
        return (ViewObjectImpl) findViewObject("InwardLCTransactionDetailVO1");
    }

    /**
     * Container's getter for SearchInwardLCTransactionDetailVO.
     * @return SearchInwardLCTransactionDetailVO
     */
    public ViewObjectImpl getSearchInwardLCTransactionDetailVO() {
        return (ViewObjectImpl) findViewObject("SearchInwardLCTransactionDetailVO");
    }

    /**
     * Container's getter for BankDetailVO.
     * @return BankDetailVO
     */
    public ViewObjectImpl getBankDetailVO() {
        return (ViewObjectImpl) findViewObject("BankDetailVO");
    }

    /**
     * Container's getter for InwardLCTransactionTypeVVO.
     * @return InwardLCTransactionTypeVVO
     */
    public ViewObjectImpl getInwardLCTransactionTypeVVO() {
        return (ViewObjectImpl) findViewObject("InwardLCTransactionTypeVVO");
    }

    /**
     * Container's getter for GetBeneficiaryDetailVO1.
     * @return GetBeneficiaryDetailVO1
     */
    public ViewObjectImpl getGetBeneficiaryDetailVO1() {
        return (ViewObjectImpl) findViewObject("GetBeneficiaryDetailVO1");
    }

    /**
     * Container's getter for InwardLCTransactionDetailVO2.
     * @return InwardLCTransactionDetailVO2
     */
    public ViewObjectImpl getInwardLCTransactionDetailVO2() {
        return (ViewObjectImpl) findViewObject("InwardLCTransactionDetailVO2");
    }

    /**
     * Container's getter for BankFacilityStructureVO1.
     * @return BankFacilityStructureVO1
     */
    public ViewObjectImpl getBankFacilityStructureVO1() {
        return (ViewObjectImpl) findViewObject("BankFacilityStructureVO1");
    }

    /**
     * Container's getter for InwardLCTransactionDetailVO3.
     * @return InwardLCTransactionDetailVO3
     */
    public ViewObjectImpl getInwardLCTransactionDetailVO3() {
        return (ViewObjectImpl) findViewObject("InwardLCTransactionDetailVO3");
    }

    /**
     * Container's getter for BankFacilityStructureVVO1.
     * @return BankFacilityStructureVVO1
     */
    public ViewObjectImpl getBankFacilityStructureVVO1() {
        return (ViewObjectImpl) findViewObject("BankFacilityStructureVVO1");
    }

    /**
     * Container's getter for FacilityAvailableLimitVO.
     * @return FacilityAvailableLimitVO
     */
    public ViewObjectImpl getFacilityAvailableLimitVO() {
        return (ViewObjectImpl) findViewObject("FacilityAvailableLimitVO");
    }

    /**
     * Container's getter for SearchTransactionDetailVO.
     * @return SearchTransactionDetailVO
     */
    public ViewObjectImpl getSearchTransactionDetailVO() {
        return (ViewObjectImpl) findViewObject("SearchTransactionDetailVO");
    }

    /**
     * Container's getter for TransactionBaseVO.
     * @return TransactionBaseVO
     */
    public ViewObjectImpl getTransactionBaseVO() {
        return (ViewObjectImpl) findViewObject("TransactionBaseVO");
    }

    /**
     * Container's getter for TransactionDetailVO.
     * @return TransactionDetailVO
     */
    public ViewObjectImpl getTransactionDetailVO() {
        return (ViewObjectImpl) findViewObject("TransactionDetailVO");
    }

    /**
     * Container's getter for TransactionDocumentRefVO.
     * @return TransactionDocumentRefVO
     */
    public ViewObjectImpl getTransactionDocumentRefVO() {
        return (ViewObjectImpl) findViewObject("TransactionDocumentRefVO");
    }

    /**
     * Container's getter for InwardLCToBeneficiaryDetailsVL1.
     * @return InwardLCToBeneficiaryDetailsVL1
     */
    public ViewLinkImpl getInwardLCToBeneficiaryDetailsVL1() {
        return (ViewLinkImpl) findViewLink("InwardLCToBeneficiaryDetailsVL1");
    }

    /**
     * Container's getter for LCTransactionDetailToBankFacilityStructureVL1.
     * @return LCTransactionDetailToBankFacilityStructureVL1
     */
    public ViewLinkImpl getLCTransactionDetailToBankFacilityStructureVL1() {
        return (ViewLinkImpl) findViewLink("LCTransactionDetailToBankFacilityStructureVL1");
    }

    /**
     * Container's getter for XxbfmTransactionDtlFk1Link1.
     * @return XxbfmTransactionDtlFk1Link1
     */
    public ViewLinkImpl getXxbfmTransactionDtlFk1Link1() {
        return (ViewLinkImpl) findViewLink("XxbfmTransactionDtlFk1Link1");
    }

    /**
     * Container's getter for XxbfmTransactionDocRefFk1Link1.
     * @return XxbfmTransactionDocRefFk1Link1
     */
    public ViewLinkImpl getXxbfmTransactionDocRefFk1Link1() {
        return (ViewLinkImpl) findViewLink("XxbfmTransactionDocRefFk1Link1");
    }

    /**
     * Container's getter for BfmMasterAM1.
     * @return BfmMasterAM1
     */
    public ApplicationModuleImpl getBfmMasterAM1() {
        return (ApplicationModuleImpl) findApplicationModule("BfmMasterAM1");
    }

    public BigDecimal createTransaction(String type) {
        ViewObjectImpl transBaseVO = this.getTransactionBaseVO();
        TransactionBaseVORowImpl newRow = (TransactionBaseVORowImpl)transBaseVO.createRow();
        newRow.setAttribute("Type", type);
        transBaseVO.insertRow(newRow);
        
        RowIterator transDetailIter = newRow.getTransactionDetailVO();
        TransactionDetailVORowImpl transDetailRow = (TransactionDetailVORowImpl)transDetailIter.createRow();
        transDetailRow.setAttribute("ApprovalStatus", TransactionType.DRAFT);
        transDetailRow.setAttribute("TransactionVersion", new BigDecimal(1.0));
        transDetailIter.insertRow(transDetailRow);
        this.getDBTransaction().commit();
        transBaseVO.executeQuery();
        
        BigDecimal transId = (BigDecimal)transDetailRow.getAttribute("TransactionDtlId");
        
        return transId;
    }
    
    public void prepareTransactionDocumentHistoryVO() {
        ViewObjectImpl transDetailVerVO = this.getTransactionDetailVersionsPageVO();
        Row[] rows = transDetailVerVO.getAllRowsInRange();
        Row transDtlRow = rows[0];
        
        BigDecimal transactionId = (BigDecimal)transDtlRow.getAttribute("TransactionId");
        BigDecimal transactionDtlId = (BigDecimal)transDtlRow.getAttribute("TransactionDtlId");
        
        ViewObjectImpl transDocRefPageVO = this.getTransactionDocumentRefPageHistoryVO();
     
        transDocRefPageVO.setApplyViewCriteriaName("TransactionDocumentRefHistoryVOCriteria");
        transDocRefPageVO.setNamedWhereClauseParam("transactionIdBind", transactionId);
        transDocRefPageVO.setNamedWhereClauseParam("transactionDtlIdBind", transactionDtlId);
        transDocRefPageVO.executeQuery();
    }
    
    public BigDecimal copyToNewTransactionVersion (BigDecimal transactionDtlId) {
        ViewObjectImpl transDetailVerPageVO = this.getTransactionDetailPageVO();
        transDetailVerPageVO.setApplyViewCriteriaName("TransactionDetailVOCriteria");
        transDetailVerPageVO.setNamedWhereClauseParam("transactionDtlIdBind", transactionDtlId);
        transDetailVerPageVO.executeQuery();
        
        Row[] rows = transDetailVerPageVO.getAllRowsInRange();
        Row transDtlRow = rows[0];
        BigDecimal transactionVersion = (BigDecimal) transDtlRow.getAttribute("TransactionVersion");
        BigDecimal transactionId = (BigDecimal)transDtlRow.getAttribute("TransactionId");
            
            
        Row transDetailRevRow = transDetailVerPageVO.createRow();
        transDetailRevRow.setAttribute("TransactionVersion", transactionVersion.add(new BigDecimal(1)));
        transDetailRevRow.setAttribute("TransactionId", transDtlRow.getAttribute("TransactionId"));
        transDetailRevRow.setAttribute("BusinessEntityId", transDtlRow.getAttribute("BusinessEntityId"));
        transDetailRevRow.setAttribute("IssuingBankId", transDtlRow.getAttribute("IssuingBankId"));
        transDetailRevRow.setAttribute("BeneficiaryBankId", transDtlRow.getAttribute("BeneficiaryBankId"));
        transDetailRevRow.setAttribute("ApprovalStatus", "DRAFT_REVISION");
        transDetailRevRow.setAttribute("SourceType", transDtlRow.getAttribute("SourceType"));
        
        transDtlRow.refresh(Row.REFRESH_WITH_DB_FORGET_CHANGES);
        this.getDBTransaction().commit();
        return (BigDecimal)transDetailRevRow.getAttribute("TransactionDtlId");
        
        /*
        "TRANSACTION_ID"      NUMBER,
        "TRANSACTION_VERSION" NUMBER,
        "TRANSACTION_DATE"    DATE,
        "BUSINESS_ENTITY_ID"  NUMBER,
        "ISSUING_BANK_ID"     NUMBER,
        "BENEFICIARY_BANK_ID" NUMBER,
        "FACILITY_TRACKER_ID" NUMBER,
        "APPROVAL_STATUS"     VARCHAR2(50 BYTE) NOT NULL ENABLE,
        "SOURCE_TYPE"         VARCHAR2(100 BYTE),
        */
    }

    public void setTransactionStatus (BigDecimal transactionDtlId, String status) {
        ViewObjectImpl transDetailVerPageVO = this.getTransactionDetailPageVO();
        transDetailVerPageVO.setApplyViewCriteriaName("TransactionDetailVOCriteria");
        transDetailVerPageVO.setNamedWhereClauseParam("transactionDtlIdBind", transactionDtlId);
        transDetailVerPageVO.executeQuery();
        
        Row[] rows = transDetailVerPageVO.getAllRowsInRange();
        Row transDtlRow = rows[0];
        transDtlRow.setAttribute("ApprovalStatus", status);
        
        this.getDBTransaction().commit();
    }

    /**
     * Container's getter for TransactionDetailVO1.
     * @return TransactionDetailVO1
     */
    public ViewObjectImpl getTransactionDetailPageVO() {
        return (ViewObjectImpl) findViewObject("TransactionDetailPageVO");
    }

    /**
     * Container's getter for TransactionDocumentRefVO1.
     * @return TransactionDocumentRefVO1
     */
    public ViewObjectImpl getTransactionDocumentRefPageHistoryVO() {
        return (ViewObjectImpl) findViewObject("TransactionDocumentRefPageHistoryVO");
    }

    /**
     * Container's getter for TransactionDetailVersionsVO1.
     * @return TransactionDetailVersionsVO1
     */
    public ViewObjectImpl getTransactionDetailVersionsPageVO() {
        return (ViewObjectImpl) findViewObject("TransactionDetailVersionsPageVO");
    }

    /**
     * Container's getter for BankFacilityStructureVO2.
     * @return BankFacilityStructureVO2
     */
    public ViewObjectImpl getBankFacilityStructurePageVO() {
        return (ViewObjectImpl) findViewObject("BankFacilityStructurePageVO");
    }

    /**
     * Container's getter for TransactionDetailToBankFacilityStructureVL1.
     * @return TransactionDetailToBankFacilityStructureVL1
     */
    public ViewLinkImpl getTransactionDetailToBankFacilityStructureVL1() {
        return (ViewLinkImpl) findViewLink("TransactionDetailToBankFacilityStructureVL1");
    }

    /**
     * Container's getter for TransactionDocumentRefVO1.
     * @return TransactionDocumentRefVO1
     */
    public ViewObjectImpl getTransactionDocumentRefPageVO() {
        return (ViewObjectImpl) findViewObject("TransactionDocumentRefPageVO");
    }

    /**
     * Container's getter for XxbfmTransactionDocRefFk2Link1.
     * @return XxbfmTransactionDocRefFk2Link1
     */
    public ViewLinkImpl getXxbfmTransactionDocRefFk2Link1() {
        return (ViewLinkImpl) findViewLink("XxbfmTransactionDocRefFk2Link1");
    }

    /**
     * Container's getter for TransactionBaseVO1.
     * @return TransactionBaseVO1
     */
    public ViewObjectImpl getTransactionBaseVO1() {
        return (ViewObjectImpl) findViewObject("TransactionBaseVO1");
    }

    /**
     * Container's getter for TransactionSourceDetailVO1.
     * @return TransactionSourceDetailVO1
     */
    public ViewObjectImpl getTransactionSourceDetailVO1() {
        return (ViewObjectImpl) findViewObject("TransactionSourceDetailVO1");
    }

    /**
     * Container's getter for TransactionSourceDetailVO2.
     * @return TransactionSourceDetailVO2
     */
    public ViewObjectImpl getTransactionSourceDetailVO2() {
        return (ViewObjectImpl) findViewObject("TransactionSourceDetailVO2");
    }

    /**
     * Container's getter for XxbfmTransactionSrcDtlFk1Link.
     * @return XxbfmTransactionSrcDtlFk1Link
     */
    public ViewLinkImpl getXxbfmTransactionSrcDtlFk1Link() {
        return (ViewLinkImpl) findViewLink("XxbfmTransactionSrcDtlFk1Link");
    }

    /**
     * Container's getter for TransactionInvoiceDetailVO1.
     * @return TransactionInvoiceDetailVO1
     */
    public ViewObjectImpl getTransactionInvoiceDetailVO1() {
        return (ViewObjectImpl) findViewObject("TransactionInvoiceDetailVO1");
    }

    /**
     * Container's getter for TransactionSourceDetailVO3.
     * @return TransactionSourceDetailVO3
     */
    public ViewObjectImpl getTransactionSourceDetailPageVO() {
        return (ViewObjectImpl) findViewObject("TransactionSourceDetailPageVO");
    }

    /**
     * Container's getter for TransactionDetailToSourceDetailVL1.
     * @return TransactionDetailToSourceDetailVL1
     */
    public ViewLinkImpl getTransactionDetailToSourceDetailVL1() {
        return (ViewLinkImpl) findViewLink("TransactionDetailToSourceDetailVL1");
    }

    /**
     * Container's getter for TransactionInvoiceDetailVO2.
     * @return TransactionInvoiceDetailVO2
     */
    public ViewObjectImpl getTransactionInvoiceDetailPageVO() {
        return (ViewObjectImpl) findViewObject("TransactionInvoiceDetailPageVO");
    }

    /**
     * Container's getter for TransactionSourceDetailToInvoiceVL1.
     * @return TransactionSourceDetailToInvoiceVL1
     */
    public ViewLinkImpl getTransactionSourceDetailToInvoiceVL1() {
        return (ViewLinkImpl) findViewLink("TransactionSourceDetailToInvoiceVL1");
    }


    /**
     * Container's getter for SearchTransactionVO2.
     * @return SearchTransactionVO2
     */
    public ViewObjectImpl getSearchTransactionPageVO() {
        return (ViewObjectImpl) findViewObject("SearchTransactionPageVO");
    }
}

